#!/usr/bin/env bash
set -eu
set -o pipefail
#

usage="Usage: $(basename $0) [-h]
    -h - help

Updates the java-api repo based on the latest version of extole
"

project_root=$(git rev-parse --show-toplevel)
if [ -z "$project_root" ]; then
    echo "Error: this command must be run in the java-api git repo" 1>&2
    exit 1
fi

examples="$project_root/examples"
mkdir -p "$examples"

build_directory=$project_root/build

options=""
while [ $# -gt 0 ]; do
    case "$1" in
        -h|-\?)
            echo "$usage"
            exit 0
        ;;
        *)
            break
        ;;
    esac
    shift
done

report_list=$build_directory/reports-list.jsonl

cat ~/java-api/build/reports-list.jsonl | jq -r 'select(.parameters.mappings) | .parameters.mappings.value' | tr ';' '\n' | sed 's/^[[:space:]]*//; s/[[:space:]]*$//' | grep -v '^$' | sort | uniq -c  | sort -n | tail -30 | awk '{$1=""; sub(/^ /, ""); print}' | tee $examples/report-metrics-common-rows.txt


for name in $(cat ~/java-api/build/reports-list.jsonl | jq -r 'select(.parameters.mappings) | .parameters.mappings.value' | tr ';' '\n' | sed 's/^[[:space:]]*//; s/[[:space:]]*$//' | grep -v '^$' |  cut -d= -f2-  | grep -o '[a-zA-Z_][a-zA-Z_0-9]*\s*(' | sed 's/[( ]*$//' |  tr '[:upper:]' '[:lower:]'  | sort | uniq); do
    python3 -c '
import re, sys
from pathlib import Path

def extract_nested(text, func):
    pattern = re.compile(rf"{func}\s*\(", re.IGNORECASE)
    for match in pattern.finditer(text):
        start = match.start()
        i = match.end()
        depth = 1
        while i < len(text) and depth > 0:
            if text[i] == "(": depth += 1
            elif text[i] == ")": depth -= 1
            i += 1
        if depth == 0:
            print(text[start:i])

file_path, func_name = sys.argv[1], sys.argv[2]
extract_nested(Path(file_path).read_text(), func_name)
' $report_list $name | sort | uniq -c | sort -n | tail -30  | awk '{$1=""; sub(/^ /, ""); print}' |  tee $examples/report-metrics-function--$name.txt 

done

